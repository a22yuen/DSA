# -----------------------------------------------------------
# 49. Group Anagrams
# Given an array of strings strs, group the anagrams together. You can return the answer in any order.
# An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
# Example 1:
#   Input: strs = ["eat","tea","tan","ate","nat","bat"]
#   Output: [["bat"],["nat","tan"],["ate","eat","tea"]]
# Example 2:
#   Input: strs = [""]
#   Output: [[""]]
# Example 3:
#   Input: strs = ["a"]
#   Output: [["a"]]
# -----------------------------------------------------------

# Solution 1 Intuition 
class Solution(object):
    def groupAnagrams(self, strs):
        """
        :type strs: List[str]
        :rtype: List[List[str]]
        """
        ds = []
        w = []
        skip = False;
        for s in strs:
            nd = {}
            for x in s:
                if x not in nd:
                    nd[x] = 1
                else:
                    nd[x] += 1
            if nd in ds:
                w[ds.index(nd)].append(s)
            else:
                ds.append(nd)
                w.append([s])
        return w